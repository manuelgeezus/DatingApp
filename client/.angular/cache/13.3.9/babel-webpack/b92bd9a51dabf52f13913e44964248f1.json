{"ast":null,"code":"import _asyncToGenerator from \"/Users/manuelgeezus/Courses/NET Core with Angular/DatingApp/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { HubConnectionBuilder } from '@microsoft/signalr';\nimport { BehaviorSubject } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { getPaginatedResult, getPaginationHeaders } from './paginationHelper';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./busy.service\";\nexport class MessageService {\n  constructor(http, busyService) {\n    this.http = http;\n    this.busyService = busyService;\n    this.baseUrl = environment.apiUrl;\n    this.hubUrl = environment.hubUrl;\n    this.messageThreadSource = new BehaviorSubject([]);\n    this.messagetThread$ = this.messageThreadSource.asObservable();\n  }\n\n  createHubConnection(user, otherUsername) {\n    this.busyService.busy();\n    this.hubConnection = new HubConnectionBuilder().withUrl(this.hubUrl + 'message?user=' + otherUsername, {\n      accessTokenFactory: () => user.token\n    }).withAutomaticReconnect().build();\n    this.hubConnection.start().catch(error => console.log(error)).finally(() => this.busyService.idle());\n    this.hubConnection.on('ReceiveMessageThread', messages => {\n      this.messageThreadSource.next(messages);\n    });\n    this.hubConnection.on('NewMessage', message => {\n      this.messagetThread$.pipe(take(1)).subscribe(messages => {\n        this.messageThreadSource.next([...messages, message]);\n      });\n    });\n    this.hubConnection.on('UpdatedGroup', group => {\n      if (group.connections.some(x => x.username === otherUsername)) {\n        this.messagetThread$.pipe(take(1)).subscribe(messages => {\n          messages.forEach(message => {\n            if (!message.dateRead) {\n              message.dateRead = new Date(Date.now());\n            }\n          });\n          this.messageThreadSource.next([...messages]);\n        });\n      }\n    });\n  }\n\n  stopHubConnection() {\n    if (this.hubConnection) {\n      this.messageThreadSource.next([]);\n      this.hubConnection.stop();\n    }\n  }\n\n  getMessages(pageNumber, pageSize, container) {\n    let params = getPaginationHeaders(pageNumber, pageSize);\n    params = params.append('Container', container);\n    return getPaginatedResult(this.baseUrl + 'messages', params, this.http);\n  }\n\n  getMessageThread(username) {\n    return this.http.get(this.baseUrl + 'messages/thread/' + username);\n  }\n\n  sendMessage(username, content) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      return _this.hubConnection.invoke('SendMessage', {\n        recipientUsername: username,\n        content\n      }).catch(error => console.log(error));\n    })();\n  }\n\n  deleteMessage(id) {\n    return this.http.delete(this.baseUrl + 'messages/' + id);\n  }\n\n}\n\nMessageService.ɵfac = function MessageService_Factory(t) {\n  return new (t || MessageService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.BusyService));\n};\n\nMessageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MessageService,\n  factory: MessageService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HubConnectionBuilder","BehaviorSubject","take","environment","getPaginatedResult","getPaginationHeaders","i0","i1","i2","MessageService","constructor","http","busyService","baseUrl","apiUrl","hubUrl","messageThreadSource","messagetThread$","asObservable","createHubConnection","user","otherUsername","busy","hubConnection","withUrl","accessTokenFactory","token","withAutomaticReconnect","build","start","catch","error","console","log","finally","idle","on","messages","next","message","pipe","subscribe","group","connections","some","x","username","forEach","dateRead","Date","now","stopHubConnection","stop","getMessages","pageNumber","pageSize","container","params","append","getMessageThread","get","sendMessage","content","invoke","recipientUsername","deleteMessage","id","delete","ɵfac","MessageService_Factory","t","ɵɵinject","HttpClient","BusyService","ɵprov","ɵɵdefineInjectable","factory","providedIn"],"sources":["/Users/manuelgeezus/Courses/NET Core with Angular/DatingApp/client/src/app/_services/message.service.ts"],"sourcesContent":["import { HubConnectionBuilder } from '@microsoft/signalr';\nimport { BehaviorSubject } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { getPaginatedResult, getPaginationHeaders } from './paginationHelper';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./busy.service\";\nexport class MessageService {\n    constructor(http, busyService) {\n        this.http = http;\n        this.busyService = busyService;\n        this.baseUrl = environment.apiUrl;\n        this.hubUrl = environment.hubUrl;\n        this.messageThreadSource = new BehaviorSubject([]);\n        this.messagetThread$ = this.messageThreadSource.asObservable();\n    }\n    createHubConnection(user, otherUsername) {\n        this.busyService.busy();\n        this.hubConnection = new HubConnectionBuilder()\n            .withUrl(this.hubUrl + 'message?user=' + otherUsername, {\n            accessTokenFactory: () => user.token\n        })\n            .withAutomaticReconnect()\n            .build();\n        this.hubConnection.start()\n            .catch(error => console.log(error))\n            .finally(() => this.busyService.idle());\n        this.hubConnection.on('ReceiveMessageThread', messages => {\n            this.messageThreadSource.next(messages);\n        });\n        this.hubConnection.on('NewMessage', message => {\n            this.messagetThread$.pipe(take(1)).subscribe(messages => {\n                this.messageThreadSource.next([...messages, message]);\n            });\n        });\n        this.hubConnection.on('UpdatedGroup', (group) => {\n            if (group.connections.some(x => x.username === otherUsername)) {\n                this.messagetThread$.pipe(take(1)).subscribe(messages => {\n                    messages.forEach(message => {\n                        if (!message.dateRead) {\n                            message.dateRead = new Date(Date.now());\n                        }\n                    });\n                    this.messageThreadSource.next([...messages]);\n                });\n            }\n        });\n    }\n    stopHubConnection() {\n        if (this.hubConnection) {\n            this.messageThreadSource.next([]);\n            this.hubConnection.stop();\n        }\n    }\n    getMessages(pageNumber, pageSize, container) {\n        let params = getPaginationHeaders(pageNumber, pageSize);\n        params = params.append('Container', container);\n        return getPaginatedResult(this.baseUrl + 'messages', params, this.http);\n    }\n    getMessageThread(username) {\n        return this.http.get(this.baseUrl + 'messages/thread/' + username);\n    }\n    async sendMessage(username, content) {\n        return this.hubConnection.invoke('SendMessage', { recipientUsername: username, content })\n            .catch(error => console.log(error));\n    }\n    deleteMessage(id) {\n        return this.http.delete(this.baseUrl + 'messages/' + id);\n    }\n}\nMessageService.ɵfac = function MessageService_Factory(t) { return new (t || MessageService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.BusyService)); };\nMessageService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: MessageService, factory: MessageService.ɵfac, providedIn: 'root' });\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}