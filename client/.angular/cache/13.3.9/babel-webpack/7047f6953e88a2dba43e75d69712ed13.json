{"ast":null,"code":"import { ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./presence.service\";\nexport let AccountsService = /*#__PURE__*/(() => {\n  class AccountsService {\n    constructor(http, presence) {\n      this.http = http;\n      this.presence = presence;\n      this.baseUrl = environment.apiUrl;\n      this.currentUserSource = new ReplaySubject(1);\n      this.currentUser$ = this.currentUserSource.asObservable();\n    }\n\n    login(model) {\n      return this.http.post(this.baseUrl + 'account/login', model).pipe(map(response => {\n        const user = response;\n\n        if (user) {\n          this.setCurrentUser(user);\n          this.presence.createHubConnection(user);\n        }\n      }));\n    }\n\n    register(model) {\n      return this.http.post(this.baseUrl + 'account/register', model).pipe(map(user => {\n        if (user) {\n          this.setCurrentUser(user);\n          this.presence.createHubConnection(user);\n        }\n      }));\n    }\n\n    setCurrentUser(user) {\n      user.roles = [];\n      const roles = this.getDecodedToken(user.token).role;\n      Array.isArray(roles) ? user.roles = roles : user.roles.push(roles);\n      localStorage.setItem('user', JSON.stringify(user));\n      this.currentUserSource.next(user);\n    }\n\n    logout() {\n      localStorage.removeItem('user');\n      this.currentUserSource.next(null);\n      this.presence.stopHubConnection();\n    }\n\n    getDecodedToken(token) {\n      return JSON.parse(atob(token.split('.')[1]));\n    }\n\n  }\n\n  AccountsService.ɵfac = function AccountsService_Factory(t) {\n    return new (t || AccountsService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.PresenceService));\n  };\n\n  AccountsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AccountsService,\n    factory: AccountsService.ɵfac,\n    providedIn: 'root'\n  });\n  return AccountsService;\n})();","map":null,"metadata":{},"sourceType":"module"}